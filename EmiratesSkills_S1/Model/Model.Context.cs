//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EmiratesSkills_S1.Model
{
    using Microsoft.SqlServer.Management.Common;
    using Microsoft.SqlServer.Management.Smo;
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.SqlClient;
    using System.IO;
    using System.Text;

    public partial class DataModel : DbContext
    {
        public DataModel()
            : base("name=DataModel")
        {
            if (!Database.Exists())
            {
                Database.CreateIfNotExists();

                string sql = File.ReadAllText("insert.sql");

                StringBuilder sb = new StringBuilder();

                string[] sqls = sql.Split('\n');

                foreach (var item in sqls)
                {
                    if (item.StartsWith("INSERT") || item.StartsWith("SET IDENTITY_INSERT"))
                    {
                        sb.AppendLine(item);
                    }
                }

                sql = sb.ToString();

                SqlConnection conn = new SqlConnection("Data Source=DESKTOP-GN3IH55\\SQLEXPRESS;Initial Catalog=EmiratesSkills;Integrated Security=True");

                ServerConnection sc = new ServerConnection(conn);

                Server server = new Server(sc);

                try
                {
                    int linhaAlteradas = server.ConnectionContext.ExecuteNonQuery(sql);

                    if (linhaAlteradas == 0)
                    {
                        Console.WriteLine("Erro ao executar o arquivo .sql");
                    }
                    else
                    {
                        Console.WriteLine("Sucesso na execução do arquivo .sql - " + linhaAlteradas + " linhas foram alteradas");
                    }

                }catch(Exception ex)
                {

                }
            }
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Competition> Competitions { get; set; }
        public virtual DbSet<CompetitionSkill> CompetitionSkills { get; set; }
        public virtual DbSet<CompetitionSkillPerson> CompetitionSkillPersons { get; set; }
        public virtual DbSet<Competitor> Competitors { get; set; }
        public virtual DbSet<FinalScore> FinalScores { get; set; }
        public virtual DbSet<Role> Roles { get; set; }
        public virtual DbSet<Skill> Skills { get; set; }
        public virtual DbSet<User> Users { get; set; }
        public virtual DbSet<Position> Positions { get; set; }
        public virtual DbSet<Staff> Staffs { get; set; }
        public virtual DbSet<Timesheet> Timesheets { get; set; }
    }
}
